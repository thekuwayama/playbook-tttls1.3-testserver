- name: Install "{{ packages }}"
  ansible.builtin.yum:
    name: "{{ packages }}"
  vars:
    packages:
      - git-core
      - gcc
      - make
      - readline-devel
      - bzip2
      - perl-core
      - zlib-devel

- name: Check whether openssl is installed
  ansible.builtin.shell: bash -lc "openssl version | grep {{ openssl_version }}"
  ignore_errors: true
  register: openssl_version_check

- name: Download openssl
  ansible.builtin.get_url:
    url: "https://www.openssl.org/source/openssl-{{ openssl_version }}.tar.gz"
    dest: "{{ openssl_directory_prefix }}/src/openssl-{{ openssl_version }}.tar.gz"
    checksum: "sha256:{{ openssl_file_sha256 }}"
  when: openssl_version_check.rc != 0

- name: Unarchive openssl
  ansible.builtin.unarchive:
    src: "{{ openssl_directory_prefix }}/src/openssl-{{ openssl_version }}.tar.gz"
    dest: "{{ openssl_directory_prefix }}/src"
    remote_src: true
  when: openssl_version_check.rc != 0

- name: Install openssl
  ansible.builtin.shell: |
    ./config --prefix={{ openssl_directory }} shared zlib
    make depend
    make
    make install
  args:
    chdir: "{{ openssl_directory_prefix }}/src/openssl-{{ openssl_version }}"
  when: openssl_version_check.rc != 0

- name: Template openssl.sh
  ansible.builtin.template:
    src: openssl.sh.j2
    dest: /etc/profile.d/openssl.sh
    owner: root
    group: root
    mode: 0755

- name: Template openssl.conf
  ansible.builtin.template:
    src: openssl.conf.j2
    dest: /etc/ld.so.conf.d/openssl.conf
    owner: root
    group: root
    mode: 0644

- name: Configure openssl library path
  ansible.builtin.command:
    cmd: ldconfig

- name: Download rbenv
  ansible.builtin.git:
    repo: https://github.com/sstephenson/rbenv.git
    version: "{{ rbenv_version }}"
    dest: "{{ rbenv_directory }}"

- name: Download ruby-build
  ansible.builtin.git:
    repo: https://github.com/rbenv/ruby-build.git
    version: "{{ ruby_build_version }}"
    dest: "{{ rbenv_directory }}/plugins/ruby-build"

- name: Template rbenv.sh
  ansible.builtin.template:
    src: rbenv.sh.j2
    dest: /etc/profile.d/rbenv.sh
    owner: root
    group: root
    mode: 0755

- name: Check ruby version and openssl version installed with ruby
  ansible.builtin.shell: bash -lc "ruby --version | grep {{ ruby_version }} && ruby -ropenssl -e'puts OpenSSL::OPENSSL_VERSION' | grep {{ openssl_version }}"
  ignore_errors: true
  register: ruby_openssl_version_check

- name: Install ruby
  ansible.builtin.command:
    cmd: bash -lc "rbenv install --force {{ ruby_version }}"
  environment:
    RUBY_CONFIGURE_OPTS: "--without-openssl"
  when: ruby_openssl_version_check.rc != 0

- name: Globalize ruby
  ansible.builtin.command: bash -lc "rbenv global {{ ruby_version }}"

- name: Install gems
  community.general.gem:
    name: "{{ item.name }}"
    version: "{{ item.version }}"
    user_install: false
    executable: "{{ rbenv_directory }}/shims/gem"
    norc: true
  with_items:
    - { name: http_parser.rb, version: 0.8.0 }
    - { name: logger, version: 1.5.3 }
    - { name: openssl, version: 3.1.0 }
    - { name: timeout, version: 0.3.1 }
    - { name: tttls1.3, version: 0.2.19 }
    - { name: webrick, version: 1.8.1 }

- name: Make directory
  ansible.builtin.file:
    path: "{{ openssl_directory }}/ssl"
    state: directory
    recurse: true
    owner: root
    mode: 0755

- name: Install cacert.pem
  ansible.builtin.get_url:
    url: https://curl.se/ca/cacert.pem
    dest: "{{ openssl_directory }}/ssl/cert.pem"
    force: true
    validate_certs: false
